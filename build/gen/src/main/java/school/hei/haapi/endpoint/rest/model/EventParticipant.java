/*
 * HEI Admin API
 * _Programmatically connect to a computer programming [school](https://hei.school)._ After [joining us](mailto:contact@hei.school), you can get an identification token from our [dev](https://dev-hei-admin.auth.eu-west-3.amazoncognito.com/oauth2/authorize?client_id=5s8cg50doahmu855rlc8fr6qmp&response_type=token&scope=email+openid&redirect_uri=https%3A%2F%2Fapi-dev.hei.school%2Fwhoami) or [prod](https://prod-hei-admin.auth.eu-west-3.amazoncognito.com/oauth2/authorize?client_id=i8bg538jpfu6mqmqb61m26trd&response_type=token&scope=email+openid&redirect_uri=https%3A%2F%2Fapi-prod.hei.school%2Fwhoami) authentication service. Then, start playing with our system!  The implementation of our API is [publicly disclosed](https://github.com/hei-school/hei-admin-api). You are welcome to try and compromise it. Happy hacking! 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package school.hei.haapi.endpoint.rest.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import school.hei.haapi.endpoint.rest.model.Event;
import school.hei.haapi.endpoint.rest.model.User;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * EventParticipant
 */
@JsonPropertyOrder({
  EventParticipant.JSON_PROPERTY_ID_EVENT_PARTICIPANT,
  EventParticipant.JSON_PROPERTY_STATUS,
  EventParticipant.JSON_PROPERTY_PARTICIPANT,
  EventParticipant.JSON_PROPERTY_EVENT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-01T17:27:14.025681302+03:00[Indian/Antananarivo]")
public class EventParticipant {
  public static final String JSON_PROPERTY_ID_EVENT_PARTICIPANT = "idEventParticipant";
  private String idEventParticipant;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    EXCEPTED("EXCEPTED"),
    
    HERE("HERE"),
    
    MISSING("MISSING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_PARTICIPANT = "participant";
  private User participant;

  public static final String JSON_PROPERTY_EVENT = "event";
  private Event event;


  public EventParticipant idEventParticipant(String idEventParticipant) {
    this.idEventParticipant = idEventParticipant;
    return this;
  }

   /**
   * Get idEventParticipant
   * @return idEventParticipant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID_EVENT_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdEventParticipant() {
    return idEventParticipant;
  }


  @JsonProperty(JSON_PROPERTY_ID_EVENT_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdEventParticipant(String idEventParticipant) {
    this.idEventParticipant = idEventParticipant;
  }


  public EventParticipant status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public EventParticipant participant(User participant) {
    this.participant = participant;
    return this;
  }

   /**
   * Get participant
   * @return participant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getParticipant() {
    return participant;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParticipant(User participant) {
    this.participant = participant;
  }


  public EventParticipant event(Event event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Event getEvent() {
    return event;
  }


  @JsonProperty(JSON_PROPERTY_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvent(Event event) {
    this.event = event;
  }


  /**
   * Return true if this EventParticipant object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventParticipant eventParticipant = (EventParticipant) o;
    return Objects.equals(this.idEventParticipant, eventParticipant.idEventParticipant) &&
        Objects.equals(this.status, eventParticipant.status) &&
        Objects.equals(this.participant, eventParticipant.participant) &&
        Objects.equals(this.event, eventParticipant.event);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idEventParticipant, status, participant, event);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventParticipant {\n");
    sb.append("    idEventParticipant: ").append(toIndentedString(idEventParticipant)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    participant: ").append(toIndentedString(participant)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

